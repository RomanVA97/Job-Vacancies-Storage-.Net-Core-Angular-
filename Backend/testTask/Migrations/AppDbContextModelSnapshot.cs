// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using testTask.Contexts;
using testTask.Enums;

namespace testTask.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("testTask.Entities.Event", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("FileName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("RegistrationLink");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("testTask.Entities.Vacancy", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("CompanyURL");

                    b.Property<string>("ContactPartner");

                    b.Property<int>("CurrencyType");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<bool>("IsRemoteWorking");

                    b.Property<string>("OrganizationName");

                    b.Property<string>("PhoneNumber");

                    b.Property<decimal>("Salary");

                    b.Property<string>("Title");

                    b.Property<int>("WorkingCondition");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");
                });
#pragma warning restore 612, 618
        }
    }
}
